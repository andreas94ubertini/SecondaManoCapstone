@model SmCapstone.Models.Messages

@{
    ViewBag.Title = "SendResponse";
}


@{
    Html.RenderAction("RenderChat", "Message");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row d-flex justify-content-center">

        <div class="form-horizontal col-10 card rounded-top-0 py-2">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <p class="m-0 fw-bold">Rispondi:</p>
                <div class="col-12 d-flex align-items-center gap-1">
                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                    <button type="submit" class="btn my-btn"><i class="fa-solid fa-paper-plane text-light"></i></button>
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
